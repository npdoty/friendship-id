<?xml version="1.0" encoding="US-ASCII"?>
<!-- With thanks to Elwyn Davies for the template. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="exp" docName="draft-doty-friendship-00" ipr="trust200902">
  <front>
    <title abbrev="New Friends Protocol">Protocol for Open Opt-in Online/Offline Friendship (PO4F)</title>

    <author fullname="Nick Doty" initials="NP." role="editor"
            surname="Doty">
      <organization>UC Berkeley</organization>
      <address>
        <postal>
          <street></street>
          <city>Oakland</city>
          <region>California</region>
        </postal>
        <email>npdoty@ischool.berkeley.edu</email>
        <uri>https://npdoty.name</uri>
      </address>
    </author>
    
    <author fullname="Andrew Badr" initials="A."
            surname="Badr">
      <address>
        <postal>
          <street></street>
          <city>San Francisco</city>
          <region>California</region>
        </postal>
        <email>andrewbadr@gmail.com</email>
        <uri>andrewbadr.com</uri>
      </address>
    </author>

    <date month="October" year="2014" />
    
    <area>General</area>

    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>friendship</keyword>

    <abstract>
      <t>
        This document defines a mechanism for discovering endpoints for making friends (friendpoints); an HTTP-based, application-layer method for creating friendships; and requirements for friends. These elements constitute the Protocol for Open Opt-in Online/Offline Friendship (POOOOF, or PO4F).
      </t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">
      <t>Friendship has gotten pretty complicated in this day and age. Making new friends is lamentably difficult. We, the authors, are sad and lonely people. What with Facebook and all, and are we networking or flirting or what?</t>
      <t>To address this problem, we document the following open protocol for making new friends. Users of the Web can discover friendpoints while browsing the Web and direct their user agents to create a new friendship through the method described in the "Making a Friend" section below.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
        "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
        document are to be interpreted as described in <xref
        target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>
    
    <section title="Friendpoint Discovery">
      <t>A server MAY indicate a new friends endpoint (hereafter "friendpoint") with text of a web page describing the results of the action. The following text is RECOMMENDED for English-language servers:
      <list hangIndent="10" style="empty">
          <t>+ Add me as a friend</t>
      </list>
      Italics are OPTIONAL. An exclamation point MAY be added, to indicate an imploring, desperate tone through feigned excitement. The text SHOULD use the imperative mode for the human-readable description.</t>
      <t>No machine-readable means for friendpoint discovery is provided, because machines cannot have friends, cannot experience love and cannot pick you up from the airport. We MUST NOT be friends with robots.</t>
    </section>
    
    <section title="Making a Friend">
      <t>To create a friendship with the operator of the server, a user MUST submit an HTTP POST request to the friendpoint. The body of the request SHOULD be empty and servers SHOULD ignore the body of the request, except for any tokens for preventing cross-site request forgery. (See Security Considerations, below.)</t>
      <t>A server SHOULD respond to the HTTP request with a status code to indicate the success or failure of creating a new friendship between the user and the operator of the server. For success, the server MUST respond with a status code in the 200 series. The following text is RECOMMENDED for the body of the response:
        <list hangIndent="10" style="empty">
            <t>We are now friends!</t>
        </list>
      </t>

      <section title="Example">
        <t>Nick browses to andrewbadr.com with his user agent and sees a link to "+ Add me as a friend". He clicks on the link to submit an HTML form and his user agent sends an HTTP POST request to the friendpoint:
          <list hangIndent="10" style="empty">
            <t>POST /friend/ HTTP/1.1 <vspace blankLines="0" />
            Host: andrewbadr.com</t>
          </list>
          And a successful response from the server indicates that Andrew and Nick are now friends:
          <list hangIndent="10" style="empty">
            <t>HTTP/1.1 200 OK <vspace blankLines="0" />
              Date: Wed, 20 August 2008 04:42:29 GMT <vspace blankLines="1" />
              We are now friends!
            </t>
          </list>
        </t>
      </section>
    </section>
    
    <section title="Friendship">
      <t>
        In all future interactions after the POST request is completed successfully, the user MUST treat the operator of the server as a friend and the operator of the server MUST treat the user as a friend. A friend MUST say hello and smile when passing you on the street and MUST tell you when there's something stuck to your shirt. A friend SHOULD invite you to social events, stick up for you in arguments with strangers, and visit you if you're in the hospital in the same town. 
      </t>
      <t>
        A friend also MAY pick you up from the airport, listen to you complain about your significant other, and help you move apartments when you were too cheap to hire someone. A friend MAY drive you out to the edge of town, just anywhere, just to get away, when you feel like you've had enough. A friend MAY commit perjury on the witness stand to protect you. A true friend MAY remember your birthday without Facebook or the use of other friendship protocols.
      </t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document includes no request to IANA.</t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>
        Friendship necessarily involves vulnerability.
      </t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <!--?rfc include="http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml"?-->
      &RFC2119;
    </references>
  </back>
</rfc>
